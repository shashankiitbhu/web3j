import java.text.SimpleDateFormat

plugins {
    id 'com.android.library'
    id 'org.ajoberstar.git-publish'
}

android {
    namespace 'org.web3j'

    defaultConfig {
        compileSdk 34
        minSdkVersion 24
        targetSdkVersion 34
    }

    lint {
        baseline = file("lint-baseline.xml")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
        }
        test {
            test.java.srcDirs += ["${project(':core').projectDir}/src/test/java"]
        }
    }
}

description 'web3j is a lightweight Java library for integration with Ethereum clients'

dependencies {
    api project(':abi')
    api project(':crypto')
    api project(':tuples')

    api "com.github.jnr:jnr-unixsocket:$jnr_unixsocketVersion"
    api "com.squareup.okhttp3:okhttp:$okhttpVersion"
    api "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    api "io.reactivex.rxjava2:rxjava:$rxjavaVersion"
    api "org.java-websocket:Java-WebSocket:$javaWebSocketVersion"
    api "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"

    api "org.slf4j:slf4j-api:$slf4jVersion"
    api "io.github.adraffy:ens-normalize:$ensAdraffyVersion"
    api "io.tmio:tuweni-bytes:$tuweniVersion"
    api "io.tmio:tuweni-units:$tuweniVersion"
    api 'software.amazon.awssdk:kms:2.20.50'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    testImplementation 'org.mockito:mockito-core:5.5.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'
    testImplementation project(path: ':crypto', configuration: 'testArtifacts')
    testImplementation "nl.jqno.equalsverifier:equalsverifier:$equalsverifierVersion"
    testImplementation "ch.qos.logback:logback-classic:$logbackVersion"
    testImplementation project(':android-test-utils')

}

def getTimestamp() {
    Date today = new Date()
    SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.S z")
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(today)
}

ext {
    docsPath = 'web3j/web3j-docs'
    ghToken = System.getenv('GITHUB_TOKEN')
}

gitPublish {

    if (ghToken) {
        repoUri = "https://github.com/${docsPath}.git"
    } else {
        repoUri = "git@github.com:${docsPath}.git"
    }

    branch = 'main'

    def coreDocs = files("${buildDir.path}/docs/javadoc/")

    contents {
        from(coreDocs) {
            into '/docs/javadoc-api'
        }
    }

    preserve {
        include '/**'
    }

    commitMessage = 'Publishing a new page'
}

// Define the testArtifacts configuration
configurations {
    testArtifacts.extendsFrom testImplementation // or testRuntime
}

// Create the testsJar task
task testsJar(type: Jar) {
    archiveClassifier.set('tests')

    // Include the compiled test classes
    from("$buildDir/intermediates/classes/test") {
        include '**/*.class' // Include all class files
    }
}

artifacts {
    testArtifacts testsJar // Associate the testsJar with the configuration
}

tasks.whenTaskAdded { task ->
    if (task.name == "compileTestJavaWithJavac") {
        task.finalizedBy(testsJar) // Ensure testsJar is generated after test compilation
    }
}

